name: Create Release Image
on:
  push:
    tags:
      - '*'
jobs:
  build_release:
    runs-on: ubuntu-latest

    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@master
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: denbicloud/cron-backup
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
          tags: ${{ steps.get_version.outputs.VERSION }}

      - name: Publish to Registry as latest
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: denbicloud/cron-backup
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
          tags: latest

  special_builds:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@master
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: denbicloud/cron-backup
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
          tags: ${{ steps.get_version.outputs.VERSION }}

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          TAG: ${{ steps.get_version.outputs.VERSION }}
        with:
          name: denbicloud/cron-backup
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          buildargs: TAG
          dockerfile: postgresql/Dockerfile
          tags: postgresql-${{ steps.get_version.outputs.VERSION }}


