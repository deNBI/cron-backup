name: Create Release Image
on:
  release:
    types: [ published,edited,created ]
  push:
    tags:
      - '*'
jobs:
  build_release:
    runs-on: ubuntu-latest

    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@master
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Build and publish image to Quay
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile
          push: true
          tags: denbicloud/cron-backup:${{ steps.get_version.outputs.VERSION }}, denbicloud/cron-backup:latest


  special_builds:
    runs-on: ubuntu-latest
    needs: build_release
    strategy:
      fail-fast: false
      matrix:
        type: [ postgresql, mysql ]
    steps:

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@master
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Build and publish image to Quay
        uses: docker/build-push-action@v4
        env:
          BASE_TAG: ${{ steps.get_version.outputs.VERSION }}
        with:
          file: ${{matrix.type}}/Dockerfile
          push: true
          tags: denbicloud/cron-backup:${{matrix.type}}-${{ steps.get_version.outputs.VERSION }}
		      build-args: BASE_TAG



